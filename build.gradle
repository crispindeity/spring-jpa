plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'jpabook'
version = '1.8.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:${version}")
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.210'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}
bootJar {
    archivesBaseName = 'app'
    archiveFileName = 'app.jar'
    archiveVersion = "0.0.0"
}

test {

    gradle.taskGraph.beforeTask { Task task ->
        if (task.name == "test") {

            println "========================== Gradle Log ==============================="
            println "Are the test cycles being performed during the build?: ${tasks.getByName("assemble").state.executed}"
            println "====================================================================="

            var isBuild = tasks.getByName("assemble").state.executed

            switch (isBuild) {
                case true:
                    doFirst {
                        systemProperty('spring.profiles.active', 'default')
                    }
                    break
                case false:
                    doFirst {
                        systemProperty('spring.profiles.active', 'local')
                    }
                    break
            }
        }
    }

    useJUnitPlatform()
}
